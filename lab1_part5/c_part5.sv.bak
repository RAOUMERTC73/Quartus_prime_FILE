module c_part5(

  input [9:0] SW,       // Slide switches
  output [9:0] LEDR,    // Red lights
  output [0:6] HEX0,    // 7-segment display for HEX0
  output [0:6] HEX1,    // 7-segment display for HEX1
  output [0:6] HEX2,    // 7-segment display for HEX2
  output [0:6] HEX3     // 7-segment display for HEX3
);

  wire [1:0] M0, M1, M2, M3;  // 2-bit output for each 4-to-1 multiplexer

  // Instantiate four instances of the 2-bit wide 4-to-1 multiplexer
  mux_2bit_4to1 U0(SW[9:8], SW[7:6], SW[5:4], SW[3:2], SW[1:0], M0);
  mux_2bit_4to1 U1(SW[9:8], SW[7:6], SW[5:4], SW[3:2], SW[1:0], M1);
  mux_2bit_4to1 U2(SW[9:8], SW[7:6], SW[5:4], SW[3:2], SW[1:0], M2);
  mux_2bit_4to1 U3(SW[9:8], SW[7:6], SW[5:4], SW[3:2], SW[1:0], M3);

  // Instantiate four instances of the 7-segment decoder
  char_7seg H0(M0, HEX0);
  char_7seg H1(M1, HEX1);
  char_7seg H2(M2, HEX2);
  char_7seg H3(M3, HEX3);

  // Add logic to rotate characters based on SW9-8 here (not shown in the given code)

  // Connect SW to LEDR for debugging
  assign LEDR = SW;

endmodule
