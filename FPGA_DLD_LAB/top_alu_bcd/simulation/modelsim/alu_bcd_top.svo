// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.0.0 Build 595 04/25/2017 SJ Lite Edition"

// DATE "01/06/2024 20:10:28"

// 
// Device: Altera 5CSEMA5F31C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (SystemVerilog) only
// 

`timescale 1 ps/ 1 ps

module alu_bcd_top (
	SW,
	KEY,
	LEDR);
input 	[9:0] SW;
input 	[1:0] KEY;
output 	[9:0] LEDR;

// Design Ports Information
// LEDR[0]	=>  Location: PIN_V16,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// LEDR[1]	=>  Location: PIN_W16,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// LEDR[2]	=>  Location: PIN_V17,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// LEDR[3]	=>  Location: PIN_V18,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// LEDR[4]	=>  Location: PIN_W17,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// LEDR[5]	=>  Location: PIN_W19,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// LEDR[6]	=>  Location: PIN_Y19,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// LEDR[7]	=>  Location: PIN_W20,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// LEDR[8]	=>  Location: PIN_W21,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// LEDR[9]	=>  Location: PIN_Y21,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
// KEY[0]	=>  Location: PIN_AA14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// KEY[1]	=>  Location: PIN_AA15,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
// SW[5]	=>  Location: PIN_AB17,	 I/O Standard: 2.5 V,	 Current Strength: Default
// SW[0]	=>  Location: PIN_AJ16,	 I/O Standard: 2.5 V,	 Current Strength: Default
// SW[1]	=>  Location: PIN_AE17,	 I/O Standard: 2.5 V,	 Current Strength: Default
// SW[2]	=>  Location: PIN_AA16,	 I/O Standard: 2.5 V,	 Current Strength: Default
// SW[3]	=>  Location: PIN_AF16,	 I/O Standard: 2.5 V,	 Current Strength: Default
// SW[4]	=>  Location: PIN_AH20,	 I/O Standard: 2.5 V,	 Current Strength: Default
// SW[6]	=>  Location: PIN_AH17,	 I/O Standard: 2.5 V,	 Current Strength: Default
// SW[7]	=>  Location: PIN_AJ17,	 I/O Standard: 2.5 V,	 Current Strength: Default
// SW[8]	=>  Location: PIN_AG21,	 I/O Standard: 2.5 V,	 Current Strength: Default
// SW[9]	=>  Location: PIN_AK16,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \my_alu|Mult0~18 ;
wire \my_alu|Mult0~19 ;
wire \my_alu|Mult0~20 ;
wire \my_alu|Mult0~21 ;
wire \my_alu|Mult0~22 ;
wire \my_alu|Mult0~23 ;
wire \my_alu|Mult0~24 ;
wire \my_alu|Mult0~25 ;
wire \my_alu|Mult0~26 ;
wire \my_alu|Mult0~27 ;
wire \my_alu|Mult0~28 ;
wire \my_alu|Mult0~29 ;
wire \my_alu|Mult0~30 ;
wire \my_alu|Mult0~31 ;
wire \my_alu|Mult0~32 ;
wire \my_alu|Mult0~33 ;
wire \my_alu|Mult0~34 ;
wire \my_alu|Mult0~35 ;
wire \my_alu|Mult0~36 ;
wire \my_alu|Mult0~37 ;
wire \my_alu|Mult0~38 ;
wire \my_alu|Mult0~39 ;
wire \my_alu|Mult0~40 ;
wire \my_alu|Mult0~41 ;
wire \my_alu|Mult0~42 ;
wire \my_alu|Mult0~43 ;
wire \my_alu|Mult0~44 ;
wire \my_alu|Mult0~45 ;
wire \my_alu|Mult0~46 ;
wire \my_alu|Mult0~47 ;
wire \my_alu|Mult0~48 ;
wire \my_alu|Mult0~49 ;
wire \my_alu|Mult0~50 ;
wire \my_alu|Mult0~51 ;
wire \my_alu|Mult0~52 ;
wire \my_alu|Mult0~53 ;
wire \my_alu|Mult0~54 ;
wire \my_alu|Mult0~55 ;
wire \my_alu|Mult0~56 ;
wire \my_alu|Mult0~57 ;
wire \my_alu|Mult0~58 ;
wire \my_alu|Mult0~59 ;
wire \my_alu|Mult0~60 ;
wire \my_alu|Mult0~61 ;
wire \my_alu|Mult0~62 ;
wire \my_alu|Mult0~63 ;
wire \my_alu|Mult0~64 ;
wire \my_alu|Mult0~65 ;
wire \my_alu|Mult0~66 ;
wire \my_alu|Mult0~67 ;
wire \my_alu|Mult0~68 ;
wire \my_alu|Mult0~69 ;
wire \my_alu|Mult0~70 ;
wire \my_alu|Mult0~71 ;
wire \~QUARTUS_CREATED_GND~I_combout ;
wire \KEY[1]~input_o ;
wire \KEY[0]~input_o ;
wire \SW[0]~input_o ;
wire \SW[1]~input_o ;
wire \SW[2]~input_o ;
wire \SW[3]~input_o ;
wire \SW[4]~input_o ;
wire \SW[5]~input_o ;
wire \SW[6]~input_o ;
wire \SW[7]~input_o ;
wire \SW[8]~input_o ;
wire \SW[9]~input_o ;
wire \my_alu|Mult0~8_resulta ;
wire \my_alu|Add0~1_sumout ;
wire \my_alu|Add1~1_sumout ;
wire \my_alu|out[0]~0_combout ;
wire \my_alu|Mult0~9 ;
wire \my_alu|Add0~2 ;
wire \my_alu|Add0~5_sumout ;
wire \my_alu|Add1~2 ;
wire \my_alu|Add1~3 ;
wire \my_alu|Add1~5_sumout ;
wire \my_alu|out[1]~1_combout ;
wire \my_alu|Mult0~10 ;
wire \my_alu|Add1~6 ;
wire \my_alu|Add1~7 ;
wire \my_alu|Add1~9_sumout ;
wire \my_alu|Add0~6 ;
wire \my_alu|Add0~9_sumout ;
wire \my_alu|out[2]~2_combout ;
wire \my_alu|Mult0~11 ;
wire \my_alu|Add1~10 ;
wire \my_alu|Add1~11 ;
wire \my_alu|Add1~13_sumout ;
wire \my_alu|Add0~10 ;
wire \my_alu|Add0~13_sumout ;
wire \my_alu|out[3]~3_combout ;
wire \my_alu|Mult0~12 ;
wire \my_alu|Add1~14 ;
wire \my_alu|Add1~15 ;
wire \my_alu|Add1~17_sumout ;
wire \my_alu|Add0~14 ;
wire \my_alu|Add0~17_sumout ;
wire \my_alu|out[4]~4_combout ;
wire \my_alu|Mult0~13 ;
wire \my_alu|Add1~18 ;
wire \my_alu|Add1~19 ;
wire \my_alu|Add1~21_sumout ;
wire \my_alu|Add0~18 ;
wire \my_alu|Add0~21_sumout ;
wire \my_alu|out[5]~5_combout ;
wire \my_alu|Mult0~14 ;
wire \my_alu|out[6]~6_combout ;
wire \my_alu|Mult0~15 ;
wire \my_alu|out[7]~7_combout ;
wire \my_alu|Mult0~16 ;
wire \my_alu|out[8]~8_combout ;
wire \my_alu|Mult0~17 ;
wire \my_alu|out[9]~9_combout ;

wire [63:0] \my_alu|Mult0~8_RESULTA_bus ;

assign \my_alu|Mult0~8_resulta  = \my_alu|Mult0~8_RESULTA_bus [0];
assign \my_alu|Mult0~9  = \my_alu|Mult0~8_RESULTA_bus [1];
assign \my_alu|Mult0~10  = \my_alu|Mult0~8_RESULTA_bus [2];
assign \my_alu|Mult0~11  = \my_alu|Mult0~8_RESULTA_bus [3];
assign \my_alu|Mult0~12  = \my_alu|Mult0~8_RESULTA_bus [4];
assign \my_alu|Mult0~13  = \my_alu|Mult0~8_RESULTA_bus [5];
assign \my_alu|Mult0~14  = \my_alu|Mult0~8_RESULTA_bus [6];
assign \my_alu|Mult0~15  = \my_alu|Mult0~8_RESULTA_bus [7];
assign \my_alu|Mult0~16  = \my_alu|Mult0~8_RESULTA_bus [8];
assign \my_alu|Mult0~17  = \my_alu|Mult0~8_RESULTA_bus [9];
assign \my_alu|Mult0~18  = \my_alu|Mult0~8_RESULTA_bus [10];
assign \my_alu|Mult0~19  = \my_alu|Mult0~8_RESULTA_bus [11];
assign \my_alu|Mult0~20  = \my_alu|Mult0~8_RESULTA_bus [12];
assign \my_alu|Mult0~21  = \my_alu|Mult0~8_RESULTA_bus [13];
assign \my_alu|Mult0~22  = \my_alu|Mult0~8_RESULTA_bus [14];
assign \my_alu|Mult0~23  = \my_alu|Mult0~8_RESULTA_bus [15];
assign \my_alu|Mult0~24  = \my_alu|Mult0~8_RESULTA_bus [16];
assign \my_alu|Mult0~25  = \my_alu|Mult0~8_RESULTA_bus [17];
assign \my_alu|Mult0~26  = \my_alu|Mult0~8_RESULTA_bus [18];
assign \my_alu|Mult0~27  = \my_alu|Mult0~8_RESULTA_bus [19];
assign \my_alu|Mult0~28  = \my_alu|Mult0~8_RESULTA_bus [20];
assign \my_alu|Mult0~29  = \my_alu|Mult0~8_RESULTA_bus [21];
assign \my_alu|Mult0~30  = \my_alu|Mult0~8_RESULTA_bus [22];
assign \my_alu|Mult0~31  = \my_alu|Mult0~8_RESULTA_bus [23];
assign \my_alu|Mult0~32  = \my_alu|Mult0~8_RESULTA_bus [24];
assign \my_alu|Mult0~33  = \my_alu|Mult0~8_RESULTA_bus [25];
assign \my_alu|Mult0~34  = \my_alu|Mult0~8_RESULTA_bus [26];
assign \my_alu|Mult0~35  = \my_alu|Mult0~8_RESULTA_bus [27];
assign \my_alu|Mult0~36  = \my_alu|Mult0~8_RESULTA_bus [28];
assign \my_alu|Mult0~37  = \my_alu|Mult0~8_RESULTA_bus [29];
assign \my_alu|Mult0~38  = \my_alu|Mult0~8_RESULTA_bus [30];
assign \my_alu|Mult0~39  = \my_alu|Mult0~8_RESULTA_bus [31];
assign \my_alu|Mult0~40  = \my_alu|Mult0~8_RESULTA_bus [32];
assign \my_alu|Mult0~41  = \my_alu|Mult0~8_RESULTA_bus [33];
assign \my_alu|Mult0~42  = \my_alu|Mult0~8_RESULTA_bus [34];
assign \my_alu|Mult0~43  = \my_alu|Mult0~8_RESULTA_bus [35];
assign \my_alu|Mult0~44  = \my_alu|Mult0~8_RESULTA_bus [36];
assign \my_alu|Mult0~45  = \my_alu|Mult0~8_RESULTA_bus [37];
assign \my_alu|Mult0~46  = \my_alu|Mult0~8_RESULTA_bus [38];
assign \my_alu|Mult0~47  = \my_alu|Mult0~8_RESULTA_bus [39];
assign \my_alu|Mult0~48  = \my_alu|Mult0~8_RESULTA_bus [40];
assign \my_alu|Mult0~49  = \my_alu|Mult0~8_RESULTA_bus [41];
assign \my_alu|Mult0~50  = \my_alu|Mult0~8_RESULTA_bus [42];
assign \my_alu|Mult0~51  = \my_alu|Mult0~8_RESULTA_bus [43];
assign \my_alu|Mult0~52  = \my_alu|Mult0~8_RESULTA_bus [44];
assign \my_alu|Mult0~53  = \my_alu|Mult0~8_RESULTA_bus [45];
assign \my_alu|Mult0~54  = \my_alu|Mult0~8_RESULTA_bus [46];
assign \my_alu|Mult0~55  = \my_alu|Mult0~8_RESULTA_bus [47];
assign \my_alu|Mult0~56  = \my_alu|Mult0~8_RESULTA_bus [48];
assign \my_alu|Mult0~57  = \my_alu|Mult0~8_RESULTA_bus [49];
assign \my_alu|Mult0~58  = \my_alu|Mult0~8_RESULTA_bus [50];
assign \my_alu|Mult0~59  = \my_alu|Mult0~8_RESULTA_bus [51];
assign \my_alu|Mult0~60  = \my_alu|Mult0~8_RESULTA_bus [52];
assign \my_alu|Mult0~61  = \my_alu|Mult0~8_RESULTA_bus [53];
assign \my_alu|Mult0~62  = \my_alu|Mult0~8_RESULTA_bus [54];
assign \my_alu|Mult0~63  = \my_alu|Mult0~8_RESULTA_bus [55];
assign \my_alu|Mult0~64  = \my_alu|Mult0~8_RESULTA_bus [56];
assign \my_alu|Mult0~65  = \my_alu|Mult0~8_RESULTA_bus [57];
assign \my_alu|Mult0~66  = \my_alu|Mult0~8_RESULTA_bus [58];
assign \my_alu|Mult0~67  = \my_alu|Mult0~8_RESULTA_bus [59];
assign \my_alu|Mult0~68  = \my_alu|Mult0~8_RESULTA_bus [60];
assign \my_alu|Mult0~69  = \my_alu|Mult0~8_RESULTA_bus [61];
assign \my_alu|Mult0~70  = \my_alu|Mult0~8_RESULTA_bus [62];
assign \my_alu|Mult0~71  = \my_alu|Mult0~8_RESULTA_bus [63];

// Location: IOOBUF_X52_Y0_N2
cyclonev_io_obuf \LEDR[0]~output (
	.i(\my_alu|out[0]~0_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(LEDR[0]),
	.obar());
// synopsys translate_off
defparam \LEDR[0]~output .bus_hold = "false";
defparam \LEDR[0]~output .open_drain_output = "false";
defparam \LEDR[0]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X52_Y0_N19
cyclonev_io_obuf \LEDR[1]~output (
	.i(\my_alu|out[1]~1_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(LEDR[1]),
	.obar());
// synopsys translate_off
defparam \LEDR[1]~output .bus_hold = "false";
defparam \LEDR[1]~output .open_drain_output = "false";
defparam \LEDR[1]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X60_Y0_N2
cyclonev_io_obuf \LEDR[2]~output (
	.i(\my_alu|out[2]~2_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(LEDR[2]),
	.obar());
// synopsys translate_off
defparam \LEDR[2]~output .bus_hold = "false";
defparam \LEDR[2]~output .open_drain_output = "false";
defparam \LEDR[2]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X80_Y0_N2
cyclonev_io_obuf \LEDR[3]~output (
	.i(\my_alu|out[3]~3_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(LEDR[3]),
	.obar());
// synopsys translate_off
defparam \LEDR[3]~output .bus_hold = "false";
defparam \LEDR[3]~output .open_drain_output = "false";
defparam \LEDR[3]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X60_Y0_N19
cyclonev_io_obuf \LEDR[4]~output (
	.i(\my_alu|out[4]~4_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(LEDR[4]),
	.obar());
// synopsys translate_off
defparam \LEDR[4]~output .bus_hold = "false";
defparam \LEDR[4]~output .open_drain_output = "false";
defparam \LEDR[4]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X80_Y0_N19
cyclonev_io_obuf \LEDR[5]~output (
	.i(\my_alu|out[5]~5_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(LEDR[5]),
	.obar());
// synopsys translate_off
defparam \LEDR[5]~output .bus_hold = "false";
defparam \LEDR[5]~output .open_drain_output = "false";
defparam \LEDR[5]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X84_Y0_N2
cyclonev_io_obuf \LEDR[6]~output (
	.i(\my_alu|out[6]~6_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(LEDR[6]),
	.obar());
// synopsys translate_off
defparam \LEDR[6]~output .bus_hold = "false";
defparam \LEDR[6]~output .open_drain_output = "false";
defparam \LEDR[6]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X89_Y6_N5
cyclonev_io_obuf \LEDR[7]~output (
	.i(\my_alu|out[7]~7_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(LEDR[7]),
	.obar());
// synopsys translate_off
defparam \LEDR[7]~output .bus_hold = "false";
defparam \LEDR[7]~output .open_drain_output = "false";
defparam \LEDR[7]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X89_Y8_N5
cyclonev_io_obuf \LEDR[8]~output (
	.i(\my_alu|out[8]~8_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(LEDR[8]),
	.obar());
// synopsys translate_off
defparam \LEDR[8]~output .bus_hold = "false";
defparam \LEDR[8]~output .open_drain_output = "false";
defparam \LEDR[8]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X89_Y6_N22
cyclonev_io_obuf \LEDR[9]~output (
	.i(\my_alu|out[9]~9_combout ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(LEDR[9]),
	.obar());
// synopsys translate_off
defparam \LEDR[9]~output .bus_hold = "false";
defparam \LEDR[9]~output .open_drain_output = "false";
defparam \LEDR[9]~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOIBUF_X36_Y0_N18
cyclonev_io_ibuf \KEY[1]~input (
	.i(KEY[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\KEY[1]~input_o ));
// synopsys translate_off
defparam \KEY[1]~input .bus_hold = "false";
defparam \KEY[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X36_Y0_N1
cyclonev_io_ibuf \KEY[0]~input (
	.i(KEY[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\KEY[0]~input_o ));
// synopsys translate_off
defparam \KEY[0]~input .bus_hold = "false";
defparam \KEY[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X54_Y0_N35
cyclonev_io_ibuf \SW[0]~input (
	.i(SW[0]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[0]~input_o ));
// synopsys translate_off
defparam \SW[0]~input .bus_hold = "false";
defparam \SW[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X50_Y0_N41
cyclonev_io_ibuf \SW[1]~input (
	.i(SW[1]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[1]~input_o ));
// synopsys translate_off
defparam \SW[1]~input .bus_hold = "false";
defparam \SW[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X56_Y0_N1
cyclonev_io_ibuf \SW[2]~input (
	.i(SW[2]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[2]~input_o ));
// synopsys translate_off
defparam \SW[2]~input .bus_hold = "false";
defparam \SW[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X52_Y0_N52
cyclonev_io_ibuf \SW[3]~input (
	.i(SW[3]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[3]~input_o ));
// synopsys translate_off
defparam \SW[3]~input .bus_hold = "false";
defparam \SW[3]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X54_Y0_N18
cyclonev_io_ibuf \SW[4]~input (
	.i(SW[4]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[4]~input_o ));
// synopsys translate_off
defparam \SW[4]~input .bus_hold = "false";
defparam \SW[4]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X56_Y0_N18
cyclonev_io_ibuf \SW[5]~input (
	.i(SW[5]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[5]~input_o ));
// synopsys translate_off
defparam \SW[5]~input .bus_hold = "false";
defparam \SW[5]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X56_Y0_N35
cyclonev_io_ibuf \SW[6]~input (
	.i(SW[6]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[6]~input_o ));
// synopsys translate_off
defparam \SW[6]~input .bus_hold = "false";
defparam \SW[6]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X58_Y0_N41
cyclonev_io_ibuf \SW[7]~input (
	.i(SW[7]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[7]~input_o ));
// synopsys translate_off
defparam \SW[7]~input .bus_hold = "false";
defparam \SW[7]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X54_Y0_N1
cyclonev_io_ibuf \SW[8]~input (
	.i(SW[8]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[8]~input_o ));
// synopsys translate_off
defparam \SW[8]~input .bus_hold = "false";
defparam \SW[8]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X54_Y0_N52
cyclonev_io_ibuf \SW[9]~input (
	.i(SW[9]),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\SW[9]~input_o ));
// synopsys translate_off
defparam \SW[9]~input .bus_hold = "false";
defparam \SW[9]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: DSP_X54_Y2_N0
cyclonev_mac \my_alu|Mult0~8 (
	.sub(gnd),
	.negate(gnd),
	.accumulate(gnd),
	.loadconst(gnd),
	.ax({\SW[4]~input_o ,\SW[3]~input_o ,\SW[2]~input_o ,\SW[1]~input_o ,\SW[0]~input_o }),
	.ay({\SW[9]~input_o ,\SW[8]~input_o ,\SW[7]~input_o ,\SW[6]~input_o ,\SW[5]~input_o }),
	.az(26'b00000000000000000000000000),
	.bx(18'b000000000000000000),
	.by(19'b0000000000000000000),
	.bz(18'b000000000000000000),
	.coefsela(3'b000),
	.coefselb(3'b000),
	.clk(3'b000),
	.aclr(2'b00),
	.ena(3'b111),
	.scanin(27'b000000000000000000000000000),
	.chainin(1'b0),
	.dftout(),
	.resulta(\my_alu|Mult0~8_RESULTA_bus ),
	.resultb(),
	.scanout(),
	.chainout());
// synopsys translate_off
defparam \my_alu|Mult0~8 .accumulate_clock = "none";
defparam \my_alu|Mult0~8 .ax_clock = "none";
defparam \my_alu|Mult0~8 .ax_width = 5;
defparam \my_alu|Mult0~8 .ay_scan_in_clock = "none";
defparam \my_alu|Mult0~8 .ay_scan_in_width = 5;
defparam \my_alu|Mult0~8 .ay_use_scan_in = "false";
defparam \my_alu|Mult0~8 .az_clock = "none";
defparam \my_alu|Mult0~8 .bx_clock = "none";
defparam \my_alu|Mult0~8 .by_clock = "none";
defparam \my_alu|Mult0~8 .by_use_scan_in = "false";
defparam \my_alu|Mult0~8 .bz_clock = "none";
defparam \my_alu|Mult0~8 .coef_a_0 = 0;
defparam \my_alu|Mult0~8 .coef_a_1 = 0;
defparam \my_alu|Mult0~8 .coef_a_2 = 0;
defparam \my_alu|Mult0~8 .coef_a_3 = 0;
defparam \my_alu|Mult0~8 .coef_a_4 = 0;
defparam \my_alu|Mult0~8 .coef_a_5 = 0;
defparam \my_alu|Mult0~8 .coef_a_6 = 0;
defparam \my_alu|Mult0~8 .coef_a_7 = 0;
defparam \my_alu|Mult0~8 .coef_b_0 = 0;
defparam \my_alu|Mult0~8 .coef_b_1 = 0;
defparam \my_alu|Mult0~8 .coef_b_2 = 0;
defparam \my_alu|Mult0~8 .coef_b_3 = 0;
defparam \my_alu|Mult0~8 .coef_b_4 = 0;
defparam \my_alu|Mult0~8 .coef_b_5 = 0;
defparam \my_alu|Mult0~8 .coef_b_6 = 0;
defparam \my_alu|Mult0~8 .coef_b_7 = 0;
defparam \my_alu|Mult0~8 .coef_sel_a_clock = "none";
defparam \my_alu|Mult0~8 .coef_sel_b_clock = "none";
defparam \my_alu|Mult0~8 .delay_scan_out_ay = "false";
defparam \my_alu|Mult0~8 .delay_scan_out_by = "false";
defparam \my_alu|Mult0~8 .enable_double_accum = "false";
defparam \my_alu|Mult0~8 .load_const_clock = "none";
defparam \my_alu|Mult0~8 .load_const_value = 0;
defparam \my_alu|Mult0~8 .mode_sub_location = 0;
defparam \my_alu|Mult0~8 .negate_clock = "none";
defparam \my_alu|Mult0~8 .operand_source_max = "input";
defparam \my_alu|Mult0~8 .operand_source_may = "input";
defparam \my_alu|Mult0~8 .operand_source_mbx = "input";
defparam \my_alu|Mult0~8 .operand_source_mby = "input";
defparam \my_alu|Mult0~8 .operation_mode = "m9x9";
defparam \my_alu|Mult0~8 .output_clock = "none";
defparam \my_alu|Mult0~8 .preadder_subtract_a = "false";
defparam \my_alu|Mult0~8 .preadder_subtract_b = "false";
defparam \my_alu|Mult0~8 .result_a_width = 64;
defparam \my_alu|Mult0~8 .signed_max = "false";
defparam \my_alu|Mult0~8 .signed_may = "false";
defparam \my_alu|Mult0~8 .signed_mbx = "false";
defparam \my_alu|Mult0~8 .signed_mby = "false";
defparam \my_alu|Mult0~8 .sub_clock = "none";
defparam \my_alu|Mult0~8 .use_chainadder = "false";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N0
cyclonev_lcell_comb \my_alu|Add0~1 (
// Equation(s):
// \my_alu|Add0~1_sumout  = SUM(( \SW[5]~input_o  ) + ( \SW[0]~input_o  ) + ( !VCC ))
// \my_alu|Add0~2  = CARRY(( \SW[5]~input_o  ) + ( \SW[0]~input_o  ) + ( !VCC ))

	.dataa(gnd),
	.datab(!\SW[0]~input_o ),
	.datac(!\SW[5]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(),
	.sumout(\my_alu|Add0~1_sumout ),
	.cout(\my_alu|Add0~2 ),
	.shareout());
// synopsys translate_off
defparam \my_alu|Add0~1 .extended_lut = "off";
defparam \my_alu|Add0~1 .lut_mask = 64'h0000CCCC00000F0F;
defparam \my_alu|Add0~1 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N30
cyclonev_lcell_comb \my_alu|Add1~1 (
// Equation(s):
// \my_alu|Add1~1_sumout  = SUM(( !\SW[0]~input_o  $ (!\SW[5]~input_o ) ) + ( !VCC ) + ( !VCC ))
// \my_alu|Add1~2  = CARRY(( !\SW[0]~input_o  $ (!\SW[5]~input_o ) ) + ( !VCC ) + ( !VCC ))
// \my_alu|Add1~3  = SHARE((!\SW[5]~input_o ) # (\SW[0]~input_o ))

	.dataa(gnd),
	.datab(!\SW[0]~input_o ),
	.datac(!\SW[5]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(),
	.sumout(\my_alu|Add1~1_sumout ),
	.cout(\my_alu|Add1~2 ),
	.shareout(\my_alu|Add1~3 ));
// synopsys translate_off
defparam \my_alu|Add1~1 .extended_lut = "off";
defparam \my_alu|Add1~1 .lut_mask = 64'h0000F3F300003C3C;
defparam \my_alu|Add1~1 .shared_arith = "on";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N51
cyclonev_lcell_comb \my_alu|out[0]~0 (
// Equation(s):
// \my_alu|out[0]~0_combout  = ( \my_alu|Add1~1_sumout  & ( (!\KEY[1]~input_o  & (((\my_alu|Add0~1_sumout )) # (\KEY[0]~input_o ))) # (\KEY[1]~input_o  & (((\my_alu|Mult0~8_resulta )))) ) ) # ( !\my_alu|Add1~1_sumout  & ( (!\KEY[1]~input_o  & 
// (!\KEY[0]~input_o  & ((\my_alu|Add0~1_sumout )))) # (\KEY[1]~input_o  & (((\my_alu|Mult0~8_resulta )))) ) )

	.dataa(!\KEY[1]~input_o ),
	.datab(!\KEY[0]~input_o ),
	.datac(!\my_alu|Mult0~8_resulta ),
	.datad(!\my_alu|Add0~1_sumout ),
	.datae(gnd),
	.dataf(!\my_alu|Add1~1_sumout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\my_alu|out[0]~0_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \my_alu|out[0]~0 .extended_lut = "off";
defparam \my_alu|out[0]~0 .lut_mask = 64'h058D058D27AF27AF;
defparam \my_alu|out[0]~0 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N3
cyclonev_lcell_comb \my_alu|Add0~5 (
// Equation(s):
// \my_alu|Add0~5_sumout  = SUM(( \SW[6]~input_o  ) + ( \SW[1]~input_o  ) + ( \my_alu|Add0~2  ))
// \my_alu|Add0~6  = CARRY(( \SW[6]~input_o  ) + ( \SW[1]~input_o  ) + ( \my_alu|Add0~2  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\SW[1]~input_o ),
	.datad(!\SW[6]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\my_alu|Add0~2 ),
	.sharein(gnd),
	.combout(),
	.sumout(\my_alu|Add0~5_sumout ),
	.cout(\my_alu|Add0~6 ),
	.shareout());
// synopsys translate_off
defparam \my_alu|Add0~5 .extended_lut = "off";
defparam \my_alu|Add0~5 .lut_mask = 64'h0000F0F0000000FF;
defparam \my_alu|Add0~5 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N33
cyclonev_lcell_comb \my_alu|Add1~5 (
// Equation(s):
// \my_alu|Add1~5_sumout  = SUM(( !\SW[1]~input_o  $ (\SW[6]~input_o ) ) + ( \my_alu|Add1~3  ) + ( \my_alu|Add1~2  ))
// \my_alu|Add1~6  = CARRY(( !\SW[1]~input_o  $ (\SW[6]~input_o ) ) + ( \my_alu|Add1~3  ) + ( \my_alu|Add1~2  ))
// \my_alu|Add1~7  = SHARE((\SW[1]~input_o  & !\SW[6]~input_o ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\SW[1]~input_o ),
	.datad(!\SW[6]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\my_alu|Add1~2 ),
	.sharein(\my_alu|Add1~3 ),
	.combout(),
	.sumout(\my_alu|Add1~5_sumout ),
	.cout(\my_alu|Add1~6 ),
	.shareout(\my_alu|Add1~7 ));
// synopsys translate_off
defparam \my_alu|Add1~5 .extended_lut = "off";
defparam \my_alu|Add1~5 .lut_mask = 64'h00000F000000F00F;
defparam \my_alu|Add1~5 .shared_arith = "on";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N57
cyclonev_lcell_comb \my_alu|out[1]~1 (
// Equation(s):
// \my_alu|out[1]~1_combout  = ( \my_alu|Add1~5_sumout  & ( (!\KEY[1]~input_o  & (((\my_alu|Add0~5_sumout )) # (\KEY[0]~input_o ))) # (\KEY[1]~input_o  & (((\my_alu|Mult0~9 )))) ) ) # ( !\my_alu|Add1~5_sumout  & ( (!\KEY[1]~input_o  & (!\KEY[0]~input_o  & 
// ((\my_alu|Add0~5_sumout )))) # (\KEY[1]~input_o  & (((\my_alu|Mult0~9 )))) ) )

	.dataa(!\KEY[1]~input_o ),
	.datab(!\KEY[0]~input_o ),
	.datac(!\my_alu|Mult0~9 ),
	.datad(!\my_alu|Add0~5_sumout ),
	.datae(gnd),
	.dataf(!\my_alu|Add1~5_sumout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\my_alu|out[1]~1_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \my_alu|out[1]~1 .extended_lut = "off";
defparam \my_alu|out[1]~1 .lut_mask = 64'h058D058D27AF27AF;
defparam \my_alu|out[1]~1 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N36
cyclonev_lcell_comb \my_alu|Add1~9 (
// Equation(s):
// \my_alu|Add1~9_sumout  = SUM(( !\SW[2]~input_o  $ (\SW[7]~input_o ) ) + ( \my_alu|Add1~7  ) + ( \my_alu|Add1~6  ))
// \my_alu|Add1~10  = CARRY(( !\SW[2]~input_o  $ (\SW[7]~input_o ) ) + ( \my_alu|Add1~7  ) + ( \my_alu|Add1~6  ))
// \my_alu|Add1~11  = SHARE((\SW[2]~input_o  & !\SW[7]~input_o ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\SW[2]~input_o ),
	.datad(!\SW[7]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\my_alu|Add1~6 ),
	.sharein(\my_alu|Add1~7 ),
	.combout(),
	.sumout(\my_alu|Add1~9_sumout ),
	.cout(\my_alu|Add1~10 ),
	.shareout(\my_alu|Add1~11 ));
// synopsys translate_off
defparam \my_alu|Add1~9 .extended_lut = "off";
defparam \my_alu|Add1~9 .lut_mask = 64'h00000F000000F00F;
defparam \my_alu|Add1~9 .shared_arith = "on";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N6
cyclonev_lcell_comb \my_alu|Add0~9 (
// Equation(s):
// \my_alu|Add0~9_sumout  = SUM(( \SW[7]~input_o  ) + ( \SW[2]~input_o  ) + ( \my_alu|Add0~6  ))
// \my_alu|Add0~10  = CARRY(( \SW[7]~input_o  ) + ( \SW[2]~input_o  ) + ( \my_alu|Add0~6  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(!\SW[2]~input_o ),
	.datad(!\SW[7]~input_o ),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\my_alu|Add0~6 ),
	.sharein(gnd),
	.combout(),
	.sumout(\my_alu|Add0~9_sumout ),
	.cout(\my_alu|Add0~10 ),
	.shareout());
// synopsys translate_off
defparam \my_alu|Add0~9 .extended_lut = "off";
defparam \my_alu|Add0~9 .lut_mask = 64'h0000F0F0000000FF;
defparam \my_alu|Add0~9 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N48
cyclonev_lcell_comb \my_alu|out[2]~2 (
// Equation(s):
// \my_alu|out[2]~2_combout  = ( \my_alu|Add0~9_sumout  & ( (!\KEY[1]~input_o  & ((!\KEY[0]~input_o ) # ((\my_alu|Add1~9_sumout )))) # (\KEY[1]~input_o  & (((\my_alu|Mult0~10 )))) ) ) # ( !\my_alu|Add0~9_sumout  & ( (!\KEY[1]~input_o  & (\KEY[0]~input_o  & 
// ((\my_alu|Add1~9_sumout )))) # (\KEY[1]~input_o  & (((\my_alu|Mult0~10 )))) ) )

	.dataa(!\KEY[1]~input_o ),
	.datab(!\KEY[0]~input_o ),
	.datac(!\my_alu|Mult0~10 ),
	.datad(!\my_alu|Add1~9_sumout ),
	.datae(gnd),
	.dataf(!\my_alu|Add0~9_sumout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\my_alu|out[2]~2_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \my_alu|out[2]~2 .extended_lut = "off";
defparam \my_alu|out[2]~2 .lut_mask = 64'h052705278DAF8DAF;
defparam \my_alu|out[2]~2 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N39
cyclonev_lcell_comb \my_alu|Add1~13 (
// Equation(s):
// \my_alu|Add1~13_sumout  = SUM(( !\SW[8]~input_o  $ (\SW[3]~input_o ) ) + ( \my_alu|Add1~11  ) + ( \my_alu|Add1~10  ))
// \my_alu|Add1~14  = CARRY(( !\SW[8]~input_o  $ (\SW[3]~input_o ) ) + ( \my_alu|Add1~11  ) + ( \my_alu|Add1~10  ))
// \my_alu|Add1~15  = SHARE((!\SW[8]~input_o  & \SW[3]~input_o ))

	.dataa(!\SW[8]~input_o ),
	.datab(!\SW[3]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\my_alu|Add1~10 ),
	.sharein(\my_alu|Add1~11 ),
	.combout(),
	.sumout(\my_alu|Add1~13_sumout ),
	.cout(\my_alu|Add1~14 ),
	.shareout(\my_alu|Add1~15 ));
// synopsys translate_off
defparam \my_alu|Add1~13 .extended_lut = "off";
defparam \my_alu|Add1~13 .lut_mask = 64'h0000222200009999;
defparam \my_alu|Add1~13 .shared_arith = "on";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N9
cyclonev_lcell_comb \my_alu|Add0~13 (
// Equation(s):
// \my_alu|Add0~13_sumout  = SUM(( \SW[8]~input_o  ) + ( \SW[3]~input_o  ) + ( \my_alu|Add0~10  ))
// \my_alu|Add0~14  = CARRY(( \SW[8]~input_o  ) + ( \SW[3]~input_o  ) + ( \my_alu|Add0~10  ))

	.dataa(!\SW[8]~input_o ),
	.datab(!\SW[3]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\my_alu|Add0~10 ),
	.sharein(gnd),
	.combout(),
	.sumout(\my_alu|Add0~13_sumout ),
	.cout(\my_alu|Add0~14 ),
	.shareout());
// synopsys translate_off
defparam \my_alu|Add0~13 .extended_lut = "off";
defparam \my_alu|Add0~13 .lut_mask = 64'h0000CCCC00005555;
defparam \my_alu|Add0~13 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N54
cyclonev_lcell_comb \my_alu|out[3]~3 (
// Equation(s):
// \my_alu|out[3]~3_combout  = ( \my_alu|Add0~13_sumout  & ( (!\KEY[1]~input_o  & ((!\KEY[0]~input_o ) # ((\my_alu|Add1~13_sumout )))) # (\KEY[1]~input_o  & (((\my_alu|Mult0~11 )))) ) ) # ( !\my_alu|Add0~13_sumout  & ( (!\KEY[1]~input_o  & (\KEY[0]~input_o  
// & ((\my_alu|Add1~13_sumout )))) # (\KEY[1]~input_o  & (((\my_alu|Mult0~11 )))) ) )

	.dataa(!\KEY[1]~input_o ),
	.datab(!\KEY[0]~input_o ),
	.datac(!\my_alu|Mult0~11 ),
	.datad(!\my_alu|Add1~13_sumout ),
	.datae(gnd),
	.dataf(!\my_alu|Add0~13_sumout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\my_alu|out[3]~3_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \my_alu|out[3]~3 .extended_lut = "off";
defparam \my_alu|out[3]~3 .lut_mask = 64'h052705278DAF8DAF;
defparam \my_alu|out[3]~3 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N42
cyclonev_lcell_comb \my_alu|Add1~17 (
// Equation(s):
// \my_alu|Add1~17_sumout  = SUM(( !\SW[9]~input_o  $ (\SW[4]~input_o ) ) + ( \my_alu|Add1~15  ) + ( \my_alu|Add1~14  ))
// \my_alu|Add1~18  = CARRY(( !\SW[9]~input_o  $ (\SW[4]~input_o ) ) + ( \my_alu|Add1~15  ) + ( \my_alu|Add1~14  ))
// \my_alu|Add1~19  = SHARE((!\SW[9]~input_o  & \SW[4]~input_o ))

	.dataa(!\SW[9]~input_o ),
	.datab(gnd),
	.datac(!\SW[4]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\my_alu|Add1~14 ),
	.sharein(\my_alu|Add1~15 ),
	.combout(),
	.sumout(\my_alu|Add1~17_sumout ),
	.cout(\my_alu|Add1~18 ),
	.shareout(\my_alu|Add1~19 ));
// synopsys translate_off
defparam \my_alu|Add1~17 .extended_lut = "off";
defparam \my_alu|Add1~17 .lut_mask = 64'h00000A0A0000A5A5;
defparam \my_alu|Add1~17 .shared_arith = "on";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N12
cyclonev_lcell_comb \my_alu|Add0~17 (
// Equation(s):
// \my_alu|Add0~17_sumout  = SUM(( \SW[9]~input_o  ) + ( \SW[4]~input_o  ) + ( \my_alu|Add0~14  ))
// \my_alu|Add0~18  = CARRY(( \SW[9]~input_o  ) + ( \SW[4]~input_o  ) + ( \my_alu|Add0~14  ))

	.dataa(!\SW[9]~input_o ),
	.datab(gnd),
	.datac(!\SW[4]~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\my_alu|Add0~14 ),
	.sharein(gnd),
	.combout(),
	.sumout(\my_alu|Add0~17_sumout ),
	.cout(\my_alu|Add0~18 ),
	.shareout());
// synopsys translate_off
defparam \my_alu|Add0~17 .extended_lut = "off";
defparam \my_alu|Add0~17 .lut_mask = 64'h0000F0F000005555;
defparam \my_alu|Add0~17 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N18
cyclonev_lcell_comb \my_alu|out[4]~4 (
// Equation(s):
// \my_alu|out[4]~4_combout  = ( \my_alu|Add0~17_sumout  & ( (!\KEY[1]~input_o  & ((!\KEY[0]~input_o ) # ((\my_alu|Add1~17_sumout )))) # (\KEY[1]~input_o  & (((\my_alu|Mult0~12 )))) ) ) # ( !\my_alu|Add0~17_sumout  & ( (!\KEY[1]~input_o  & (\KEY[0]~input_o  
// & ((\my_alu|Add1~17_sumout )))) # (\KEY[1]~input_o  & (((\my_alu|Mult0~12 )))) ) )

	.dataa(!\KEY[1]~input_o ),
	.datab(!\KEY[0]~input_o ),
	.datac(!\my_alu|Mult0~12 ),
	.datad(!\my_alu|Add1~17_sumout ),
	.datae(gnd),
	.dataf(!\my_alu|Add0~17_sumout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\my_alu|out[4]~4_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \my_alu|out[4]~4 .extended_lut = "off";
defparam \my_alu|out[4]~4 .lut_mask = 64'h052705278DAF8DAF;
defparam \my_alu|out[4]~4 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N45
cyclonev_lcell_comb \my_alu|Add1~21 (
// Equation(s):
// \my_alu|Add1~21_sumout  = SUM(( VCC ) + ( \my_alu|Add1~19  ) + ( \my_alu|Add1~18  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\my_alu|Add1~18 ),
	.sharein(\my_alu|Add1~19 ),
	.combout(),
	.sumout(\my_alu|Add1~21_sumout ),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \my_alu|Add1~21 .extended_lut = "off";
defparam \my_alu|Add1~21 .lut_mask = 64'h000000000000FFFF;
defparam \my_alu|Add1~21 .shared_arith = "on";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N15
cyclonev_lcell_comb \my_alu|Add0~21 (
// Equation(s):
// \my_alu|Add0~21_sumout  = SUM(( GND ) + ( GND ) + ( \my_alu|Add0~18  ))

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(\my_alu|Add0~18 ),
	.sharein(gnd),
	.combout(),
	.sumout(\my_alu|Add0~21_sumout ),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \my_alu|Add0~21 .extended_lut = "off";
defparam \my_alu|Add0~21 .lut_mask = 64'h0000FFFF00000000;
defparam \my_alu|Add0~21 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N21
cyclonev_lcell_comb \my_alu|out[5]~5 (
// Equation(s):
// \my_alu|out[5]~5_combout  = ( \my_alu|Add0~21_sumout  & ( (!\KEY[1]~input_o  & ((!\KEY[0]~input_o ) # ((\my_alu|Add1~21_sumout )))) # (\KEY[1]~input_o  & (((\my_alu|Mult0~13 )))) ) ) # ( !\my_alu|Add0~21_sumout  & ( (!\KEY[1]~input_o  & (\KEY[0]~input_o  
// & ((\my_alu|Add1~21_sumout )))) # (\KEY[1]~input_o  & (((\my_alu|Mult0~13 )))) ) )

	.dataa(!\KEY[1]~input_o ),
	.datab(!\KEY[0]~input_o ),
	.datac(!\my_alu|Mult0~13 ),
	.datad(!\my_alu|Add1~21_sumout ),
	.datae(gnd),
	.dataf(!\my_alu|Add0~21_sumout ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\my_alu|out[5]~5_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \my_alu|out[5]~5 .extended_lut = "off";
defparam \my_alu|out[5]~5 .lut_mask = 64'h052705278DAF8DAF;
defparam \my_alu|out[5]~5 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X53_Y2_N30
cyclonev_lcell_comb \my_alu|out[6]~6 (
// Equation(s):
// \my_alu|out[6]~6_combout  = ( \my_alu|Mult0~14  & ( ((\KEY[0]~input_o  & \my_alu|Add1~21_sumout )) # (\KEY[1]~input_o ) ) ) # ( !\my_alu|Mult0~14  & ( (\KEY[0]~input_o  & (!\KEY[1]~input_o  & \my_alu|Add1~21_sumout )) ) )

	.dataa(gnd),
	.datab(!\KEY[0]~input_o ),
	.datac(!\KEY[1]~input_o ),
	.datad(!\my_alu|Add1~21_sumout ),
	.datae(!\my_alu|Mult0~14 ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\my_alu|out[6]~6_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \my_alu|out[6]~6 .extended_lut = "off";
defparam \my_alu|out[6]~6 .lut_mask = 64'h00300F3F00300F3F;
defparam \my_alu|out[6]~6 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N27
cyclonev_lcell_comb \my_alu|out[7]~7 (
// Equation(s):
// \my_alu|out[7]~7_combout  = ( \my_alu|Mult0~15  & ( ((\KEY[0]~input_o  & \my_alu|Add1~21_sumout )) # (\KEY[1]~input_o ) ) ) # ( !\my_alu|Mult0~15  & ( (!\KEY[1]~input_o  & (\KEY[0]~input_o  & \my_alu|Add1~21_sumout )) ) )

	.dataa(!\KEY[1]~input_o ),
	.datab(!\KEY[0]~input_o ),
	.datac(!\my_alu|Add1~21_sumout ),
	.datad(gnd),
	.datae(gnd),
	.dataf(!\my_alu|Mult0~15 ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\my_alu|out[7]~7_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \my_alu|out[7]~7 .extended_lut = "off";
defparam \my_alu|out[7]~7 .lut_mask = 64'h0202020257575757;
defparam \my_alu|out[7]~7 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X55_Y2_N24
cyclonev_lcell_comb \my_alu|out[8]~8 (
// Equation(s):
// \my_alu|out[8]~8_combout  = ( \my_alu|Mult0~16  & ( ((\KEY[0]~input_o  & \my_alu|Add1~21_sumout )) # (\KEY[1]~input_o ) ) ) # ( !\my_alu|Mult0~16  & ( (!\KEY[1]~input_o  & (\KEY[0]~input_o  & \my_alu|Add1~21_sumout )) ) )

	.dataa(!\KEY[1]~input_o ),
	.datab(!\KEY[0]~input_o ),
	.datac(gnd),
	.datad(!\my_alu|Add1~21_sumout ),
	.datae(gnd),
	.dataf(!\my_alu|Mult0~16 ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\my_alu|out[8]~8_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \my_alu|out[8]~8 .extended_lut = "off";
defparam \my_alu|out[8]~8 .lut_mask = 64'h0022002255775577;
defparam \my_alu|out[8]~8 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X53_Y2_N39
cyclonev_lcell_comb \my_alu|out[9]~9 (
// Equation(s):
// \my_alu|out[9]~9_combout  = ( \my_alu|Mult0~17  & ( ((\my_alu|Add1~21_sumout  & \KEY[0]~input_o )) # (\KEY[1]~input_o ) ) ) # ( !\my_alu|Mult0~17  & ( (!\KEY[1]~input_o  & (\my_alu|Add1~21_sumout  & \KEY[0]~input_o )) ) )

	.dataa(!\KEY[1]~input_o ),
	.datab(!\my_alu|Add1~21_sumout ),
	.datac(!\KEY[0]~input_o ),
	.datad(gnd),
	.datae(!\my_alu|Mult0~17 ),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\my_alu|out[9]~9_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \my_alu|out[9]~9 .extended_lut = "off";
defparam \my_alu|out[9]~9 .lut_mask = 64'h0202575702025757;
defparam \my_alu|out[9]~9 .shared_arith = "off";
// synopsys translate_on

// Location: LABCELL_X45_Y17_N0
cyclonev_lcell_comb \~QUARTUS_CREATED_GND~I (
// Equation(s):

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\~QUARTUS_CREATED_GND~I_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_GND~I .extended_lut = "off";
defparam \~QUARTUS_CREATED_GND~I .lut_mask = 64'h0000000000000000;
defparam \~QUARTUS_CREATED_GND~I .shared_arith = "off";
// synopsys translate_on

endmodule
