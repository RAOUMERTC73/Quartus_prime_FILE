

module part4_tb;

  // Declare signals
  reg Clk;        // Clock signal
  reg D;          // Data input
  wire Q_latch;   // Output of gated D latch
  wire Q_pos_edge; // Output of positive-edge triggered D flip-flop
  wire Q_neg_edge; // Output of negative-edge triggered D flip-flop

  // Instantiate the module
  part4 dut(
    .Clk(Clk),
    .D(D),
    .Q_latch(Q_latch),
    .Q_pos_edge(Q_pos_edge),
    .Q_neg_edge(Q_neg_edge)
  );

  // Clock generation
  always
    begin
      #5 Clk =~Clk; // Toggle the clock every 5 time units
    end

  // Stimulus generation
  initial
    begin
      D = 0; #5;
      D = 1; #10;
      D = 0; #2;
      D = 1; #10;
      D = 0;
      #10 $finish; // Finish simulation after 10 time units
    end

  // Display outputs
  always @(posedge Clk) begin
    $display("At time %t: Q_latch = %b, Q_pos_edge = %b, Q_neg_edge = %b", $time, Q_latch, Q_pos_edge, Q_neg_edge);
  end

endmodule
